default_platform(:ios)

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    build_app(workspace: "GitTime.xcworkspace", scheme: "GitTime")
    upload_to_testflight
  end
end


platform :ios do

  before_all do
    ensure_git_status_clean
  end

  desc "Beta Deployment to TestFlight"
  lane :testflight do
    sigh
    # version_number = get_version_number(xcodeproj: "GitTime.xcodeproj")
    # build_number = get_build_number(xcodeproj: "GitTime.xcodeproj")
    # add_badge(shield: "#{version_number}-#{build_number}-dark", shield_gravity: "South", no_badge: false)
    add_badge(dark: true)
    gym(
      clean: true, # Should the project be cleaned before building it?
      workspace: "GitTime.xcworkspace", # Path to the workspace file
      scheme: "GitTime", # The project's scheme. Make sure it's marked as Shared
      # configuration: "Debug" # The configuration to use when building the app. Defaults to 'Release'
      include_bitcode: true, # Should the ipa file include bitcode?
      include_symbols: true # Should the ipa file include symbols?
    )
    upload_to_testflight
  end

  after_all do |lane|
    clean_build_artifacts # Deletes files created as result of running gym, cert, sigh or download_dsyms
    reset_git_repo(skip_clean: true) # Resets git repo to a clean state by discarding uncommitted changes
    version_number = get_version_number(xcodeproj: "GitTime.xcodeproj")
    build_number = get_build_number(xcodeproj: "GitTime.xcodeproj")
    slack(
      slack_url: ENV['SLACK_URL'],
      message: "GitTime v#{version_number}(#{build_number}) TestFlight upload success."
    )
  end

  error do |lane, exception|
    version_number = get_version_number(xcodeproj: "GitTime.xcodeproj")
    build_number = get_build_number(xcodeproj: "GitTime.xcodeproj")
    slack(
      slack_url: ENV['SLACK_URL'],
      message: "GitTime v#{version_number}(#{build_number}) TestFlight upload success."
    )
  end

end

